name: Deploy Flask Game to ECS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: flask-game
  ECS_SERVICE: flask-game-service
  ECS_CLUSTER: flask-game-cluster

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -input=false
        working-directory: terraform
        env:
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_github_repo: ${{ github.repository }}  # ‰º†ÈÄí GitHub ‰ªìÂ∫ìÂêç

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve
        working-directory: terraform
        env:
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_github_repo: ${{ github.repository }}  # ‰º†ÈÄí GitHub ‰ªìÂ∫ìÂêç

      - name: Get ECR repository URL
        id: get-ecr-url
        run: |
          ECR_URL=$(terraform output -raw ecr_repository_url)
          echo "ecr_url=$ECR_URL" >> $GITHUB_OUTPUT
        working-directory: terraform

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ steps.get-ecr-url.outputs.ecr_url }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ steps.get-ecr-url.outputs.ecr_url }}:latest -f docker/Dockerfile .
          docker push ${{ steps.get-ecr-url.outputs.ecr_url }}:latest

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment \
            --region $AWS_REGION

      - name: Display application URL
        run: |
          ALB_DNS=$(terraform output -raw alb_dns_name)
          echo "üéâ Deployment completed successfully!"
          echo "üåê Your Flask game is available at: http://$ALB_DNS"
        working-directory: terraform